services:
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - mgmt_net

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    networks:
      - noti_net
    restart: always
    user: "1000:1000"
    read_only: true
    security_opt: [ no-new-privileges:true ]
    depends_on:
      - ntfy
    env_file:
      - .env-cloudflare-ddns
    environment:
      - DOMAINS=green-tech-hub.com,*.green-tech-hub.com
      - PROXIED=true
      - IP6_PROVIDER=none

#  fail2ban:
#    image: lscr.io/linuxserver/fail2ban:latest
#    container_name: fail2ban
#    cap_add:
#      - NET_ADMIN
#      - NET_RAW
#    network_mode: host
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=Etc/UTC
#    volumes:
#      - ./fail2ban/config:/config
#      - /var/log:/var/log:ro
#    restart: unless-stopped

  grafana:
    build: ./grafana
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring_net

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    restart: unless-stopped
    networks:
      - monitoring_net

  ntfy:
    image: binwiederhier/ntfy:latest
    container_name: ntfy
    command:
      - serve
    ports:
      - "8085:80"
    volumes:
      - ntfy_cache:/var/cache/ntfy
      - ./ntfy/config:/etc/ntfy
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - monitoring_net
      - noti_net

  portainer:
    image: portainer/portainer-ce:linux-arm64
    container_name: portainer
    ports:
      - "9443:9443"
      - "9000:9000"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - mgmt_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
    restart: unless-stopped
    networks:
      - monitoring_net

  rustdesk_hbbs:
    image: rustdesk/rustdesk-server:latest
    container_name: rustdesk_hbbs
    command: hbbs
    volumes:
      - rustdesk_data:/root
    network_mode: "host"
    depends_on:
      - rustdesk_hbbr
    restart: unless-stopped

  rustdesk_hbbr:
    image: rustdesk/rustdesk-server:latest
    container_name: rustdesk_hbbr
    command: hbbr
    volumes:
      - rustdesk_data:/root
    network_mode: "host"
    restart: unless-stopped

#  ssh_exporter:
#    build: ./ssh_exporter
#    container_name: ssh-exporter
#    ports:
#      - "9312:9312"
#    restart: unless-stopped
#    networks:
#      - monitoring_net

networks:
#  rust_desk_net:
#    name: rustdesk_network
#    driver: bridge
  monitoring_net:
    name: monitoring_network
    driver: bridge
  mgmt_net:
    name: management_network
    driver: bridge
  noti_net:
    name: notification_network
    driver: bridge
  greentechhub_net:
    external: true

volumes:
  caddy_data:
  caddy_config:
  grafana_data:
  ntfy_cache:
  portainer_data:
  prometheus_data:
  rustdesk_data:
